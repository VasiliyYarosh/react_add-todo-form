{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","userName","userEmail","className","href","TodoInfo","id","title","completed","cn","TodoList","todos","map","item","user","name","email","username","initialProducts","userId","todo","usersFromServer","find","u","App","useState","setTitle","userChose","setUserChose","setTodos","submitted","setSubmitted","action","method","onSubmit","event","preventDefault","trim","selectedUser","newTodo","length","prevTodos","type","value","placeholder","onChange","target","e","parseInt","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56b45c3a.chunk.js","sourcesContent":["interface UserInfoProps {\n  userName: string;\n  userEmail: string;\n}\n\nexport const UserInfo: React.FC<UserInfoProps> = ({ userName, userEmail }) => (\n  <a className=\"UserInfo\" href={`mailto:${userEmail}`}>\n    {userName}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  id: number;\n  title: string;\n  userName: string;\n  userEmail: string;\n  completed: boolean;\n}\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({\n  id,\n  title,\n  userName,\n  userEmail,\n  completed,\n}) => (\n  <article\n    data-id={id}\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': completed === true,\n    })}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n    <UserInfo\n      userName={userName}\n      userEmail={userEmail}\n    />\n  </article>\n);\n","import { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: {\n    id: number;\n    title: string;\n    completed: boolean;\n    user?: {\n      name: string\n      email: string\n    }\n  }[];\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((item) => (\n      <TodoInfo\n        key={item.id}\n        title={item.title}\n        userName={item.user?.name || ''}\n        userEmail={item.user?.email || ''}\n        completed={item.completed}\n        id={item.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\ninterface Todo {\n  id: number;\n  title: string;\n  userId: number;\n  user?: User;\n  completed: boolean;\n}\n\nconst initialProducts = todosFromServer.map((todo) => {\n  const user = usersFromServer.find(u => u.id === todo.userId);\n\n  return { ...todo, user };\n});\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState<string>('');\n  const [userChose, setUserChose] = useState<number>(0);\n  const [todos, setTodos] = useState<Todo[]>([...initialProducts]);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handlerOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title.trim() === '' || userChose === 0) {\n      setSubmitted(true);\n\n      return;\n    }\n\n    const selectedUser = usersFromServer.find((user) => user.id === userChose);\n\n    if (!selectedUser) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: todos.length + 1,\n      title,\n      completed: false,\n      userId: userChose,\n      user: selectedUser,\n    };\n\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n    setTitle('');\n    setUserChose(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handlerOnSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={event => setTitle(event.target.value)}\n          />\n\n          {submitted && title.trim() === ''\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userChose}\n            onChange={(e) => setUserChose(parseInt(e.target.value, 10))}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(item => (\n              <option\n                value={item.id}\n                key={item.id}\n              >\n                {item.name}\n              </option>\n            ))}\n          </select>\n\n          {submitted && userChose === 0\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}